{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/containers/chat/chat.component.ts","webpack:///src/app/containers/chat/chat.component.html","webpack:///src/app/components/usernname/usernname.component.ts","webpack:///src/app/components/usernname/usernname.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","AppComponent","title","AppModule","ChatComponent","userName","message","messageList","userList","name","socket","emit","on","data","push","mine","sendMessage","UsernnameComponent","userNameEvent","setUserName","bootstrapModule","err","console","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'client';\r\n}\r\n","<app-chat></app-chat>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ChatComponent } from './containers/chat/chat.component';\r\nimport { UsernnameComponent } from './components/usernname/usernname.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ChatComponent,\r\n    UsernnameComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport * as io from 'socket.io-client';\r\n\r\n@Component({\r\n  selector: 'app-chat',\r\n  templateUrl: './chat.component.html',\r\n  styleUrls: ['./chat.component.scss']\r\n})\r\nexport class ChatComponent {\r\n  userName = '';\r\n  message = '';\r\n  messageList: {message: string, userName: string, mine: boolean}[] = [];\r\n  userList: string[] = [];\r\n  socket: any;\r\n\r\n  constructor() { }\r\n\r\n  userNameUpdate(name: string): void {\r\n    this.socket = io.io(`https://chat-competent-programming.herokuapp.com/?userName=${name}`);\r\n    this.userName = name;\r\n\r\n    this.socket.emit('set-user-name', name);\r\n\r\n    this.socket.on('user-list', (userList: string[]) => {\r\n      this.userList = userList;\r\n    });\r\n\r\n    this.socket.on('message-broadcast', (data: {message: string, userName: string}) => {\r\n      if (data) {\r\n        this.messageList.push({message: data.message, userName: data.userName, mine: false});\r\n      }\r\n    });\r\n  }\r\n\r\n  sendMessage(): void {\r\n    this.socket.emit('message', this.message);\r\n    this.messageList.push({message: this.message, userName: this.userName, mine: true});\r\n    this.message = '';\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <h1>Competent programming - Chat App</h1>\r\n  <app-usernname (userNameEvent)=\"userNameUpdate($event)\" *ngIf=\"!userName\"></app-usernname>\r\n  <div class=\"chatbox\">\r\n    <div class=\"chatbox__user-list\">\r\n      <h2>User list</h2>\r\n      <div class=\"chatbox__user--active\" *ngFor=\"let user of userList\" >\r\n        <p>{{ user }}</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"messages_list\">\r\n      <div class=\"chatbox__messages\" *ngFor=\"let msg of messageList\" [ngClass]=\"{mine: msg.mine}\">\r\n        <div class=\"user-message\">\r\n          <div class=\"message-box\">\r\n            <p class=\"name\">{{ msg.userName }}</p>\r\n            <br/>\r\n            <p class=\"message\">{{ msg.message }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"send-message\">\r\n    <input type=\"text\" [(ngModel)]=\"message\">\r\n    <button (click)=\"sendMessage()\">Send</button>\r\n  </div>\r\n</div>\r\n","import { Component, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-usernname',\r\n  templateUrl: './usernname.component.html',\r\n  styleUrls: ['./usernname.component.scss']\r\n})\r\nexport class UsernnameComponent {\r\n  @Output() userNameEvent = new EventEmitter<string>();\r\n\r\n  userName = '';\r\n\r\n  constructor() { }\r\n\r\n  setUserName(): void {\r\n    this.userNameEvent.emit(this.userName);\r\n  }\r\n\r\n}\r\n","<div>\r\n  <input type=\"text\" [(ngModel)]=\"userName\">\r\n  <button (click)=\"setUserName()\" >Set username</button>\r\n</div>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}