{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/containers/chat/chat.component.ts","./src/app/containers/chat/chat.component.html","./src/app/components/usernname/usernname.component.ts","./src/app/components/usernname/usernname.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'client';\r\n}\r\n","<app-chat></app-chat>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ChatComponent } from './containers/chat/chat.component';\r\nimport { UsernnameComponent } from './components/usernname/usernname.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ChatComponent,\r\n    UsernnameComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport * as io from 'socket.io-client';\r\n\r\n@Component({\r\n  selector: 'app-chat',\r\n  templateUrl: './chat.component.html',\r\n  styleUrls: ['./chat.component.scss']\r\n})\r\nexport class ChatComponent {\r\n  userName = '';\r\n  message = '';\r\n  messageList: {message: string, userName: string, mine: boolean}[] = [];\r\n  userList: string[] = [];\r\n  socket: any;\r\n\r\n  constructor() { }\r\n\r\n  userNameUpdate(name: string): void {\r\n    this.socket = io.io(`https://chat-competent-programming.herokuapp.com/?userName=${name}`);\r\n    this.userName = name;\r\n\r\n    this.socket.emit('set-user-name', name);\r\n\r\n    this.socket.on('user-list', (userList: string[]) => {\r\n      this.userList = userList;\r\n    });\r\n\r\n    this.socket.on('message-broadcast', (data: {message: string, userName: string}) => {\r\n      if (data) {\r\n        this.messageList.push({message: data.message, userName: data.userName, mine: false});\r\n      }\r\n    });\r\n  }\r\n\r\n  sendMessage(): void {\r\n    this.socket.emit('message', this.message);\r\n    this.messageList.push({message: this.message, userName: this.userName, mine: true});\r\n    this.message = '';\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <h1>Competent programming - Chat App</h1>\r\n  <app-usernname (userNameEvent)=\"userNameUpdate($event)\" *ngIf=\"!userName\"></app-usernname>\r\n  <div class=\"chatbox\">\r\n    <div class=\"chatbox__user-list\">\r\n      <h2>User list</h2>\r\n      <div class=\"chatbox__user--active\" *ngFor=\"let user of userList\" >\r\n        <p>{{ user }}</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"messages_list\">\r\n      <div class=\"chatbox__messages\" *ngFor=\"let msg of messageList\" [ngClass]=\"{mine: msg.mine}\">\r\n        <div class=\"user-message\">\r\n          <div class=\"message-box\">\r\n            <p class=\"name\">{{ msg.userName }}</p>\r\n            <br/>\r\n            <p class=\"message\">{{ msg.message }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"send-message\">\r\n    <input type=\"text\" [(ngModel)]=\"message\">\r\n    <button (click)=\"sendMessage()\">Send</button>\r\n  </div>\r\n</div>\r\n","import { Component, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-usernname',\r\n  templateUrl: './usernname.component.html',\r\n  styleUrls: ['./usernname.component.scss']\r\n})\r\nexport class UsernnameComponent {\r\n  @Output() userNameEvent = new EventEmitter<string>();\r\n\r\n  userName = '';\r\n\r\n  constructor() { }\r\n\r\n  setUserName(): void {\r\n    this.userNameEvent.emit(this.userName);\r\n  }\r\n\r\n}\r\n","<div>\r\n  <input type=\"text\" [(ngModel)]=\"userName\">\r\n  <button (click)=\"setUserName()\" >Set username</button>\r\n</div>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}